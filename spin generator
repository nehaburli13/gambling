import random
# need to generate slot machine numbers randomly

MAX_LINES = 3
MAX_BET = 100
MIN_BET = 1
#constant values that are not going to change

ROWS = 3
COLS = 3
# reels (columns) in the slot machine

symbol_count = {"A": 2, "B": 4, "C": 6, "D":8}
# symbols in the slot machine; need same number of symbols per column; need values for each symbol
# symbols at the beginning of list are most valuable; number value is the number of times they occur

symbol_value = {"A": 5, "B": 4, "C": 3, "D":2} # the more rare the symbol, the higher the bet gets multiplied
def check_winnings(columns,lines,bet,values): # slot machine is columns
    winnings = 0
    winning_lines = []
    for line in range(lines):
        symbol = columns[0][line]# checking if every symbol is the same; checking first symbol in the first column of every row
        for column in columns:
            symbol_to_check = column[line]
            if symbol != symbol_to_check:
                break
        else:
            winnings += values[symbol] * bet
            winning_lines.append(line + 1)
    return winnings, winning_lines


def get_slot_machine_spin(rows,cols,symbols): #randomly picks number of rows inside each column
    all_symbols = []
    for symbol, symbol_count in symbols.items(): #gives the key and value associated with dictionary
        for _ in range(symbol_count):
            all_symbols.append(symbol) # adds symbols based on the value to the all_symbols list
    columns = [] # lists contain all the values in the columns; list of lists where each inner list represents one column of symbols
    for _ in range(cols):# generating values inside columns; generate values based on number of rows
        column = []
        current_symbols = all_symbols[:] # copying the list so the current_symbols list has the values selected removed
        for _ in range(rows): # looping through number of values needed to generate, which is equal to number of rows in slot machine
            value = random.choice(current_symbols) # picks random value from list
            current_symbols.remove(value) # remove finds the first instance of the value in the list and gets rid of it
            column.append(value)
        columns.append(column)
    return columns
    # picking random values for each row

def print_slot_machine(columns):
    for row in range(len(columns[0])):
        for i, column in enumerate(columns):
            if i != len(columns) - 1:
                print(column[row], end=" | ")
            else:
                print(column[row], end="")
        print()

def deposit():
    while True:
        amount = input("What would you like to deposit? $")
        if amount.isdigit():
            amount = int(amount)
            if amount > 0:
                break
            else:
                print ("amount must be greater than 0")
        else:
            print("Please enter a number")
    return amount

def get_number_of_lines():
    while True:
        lines = input("Enter the number of lines to bet on (1-" + str(MAX_LINES) +")? ")
        if lines.isdigit():
            lines = int(lines)
            if 1 <= lines <= MAX_LINES:
                break
            else:
                print ("Enter a valid number of lines")
        else:
            print("Please enter a number")
    return lines

def get_bet():
    while True:
        amount = input("What would you like to bet on each line? $ ")
        if amount.isdigit():
            amount = int(amount)
            if MIN_BET <= amount <= MAX_BET:
                break
            else:
                print (f"Amount must be between ${MIN_BET} - ${MAX_BET}.")
        else:
            print("Please enter a number")
    return amount

def spin(balance):
    lines = get_number_of_lines()
    while True:
        bet = get_bet()
        total_bet = bet * lines
        if total_bet > balance:
            print(f"You do not have enough money to bet that amount, your current balance is: {balance}")
        else:
            break
    print(f"You are betting ${bet} on {lines} lines. Total bet is equal to $ ")
    slots = get_slot_machine_spin(ROWS, COLS, symbol_count)
    print_slot_machine(slots)
    winnings, winning_lines = check_winnings(slots, lines, bet, symbol_value)
    print(f"You won ${winnings}.")
    print(f"You won on lines:", *winning_lines)
    return winnings - total_bet

    slots = get_slot_machine_spin(ROWS, COLUMNS, symbol_count)
    print_slot_machine(slots)
    winnings = check_winnings(slots, lines, bet, symbol_value)
    print(f"You won {winnings}.")

def game():
    balance = deposit()
    while True:
        print(f"Current balance is: ${balance}")
        answer = input("Press enter to play (q to quit).")
        if answer == "q":
            break
        balance += spin(balance)

    print(f"you left with ${balance}")

game()
